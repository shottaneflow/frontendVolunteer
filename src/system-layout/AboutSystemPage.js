import React,{useState}from "react";
import './AboutSystemPage.css';


const AboutSystemPage = () =>{
    const roles = JSON.parse(localStorage.getItem("userRoles"));
    const isAdmin = roles.some(role => role.authority === "ROLE_ADMIN");
    const isUser = roles.some(role => role.authority === "ROLE_USER");

    return(
        <div className="about-system-main">  
            <h1>О системе</h1>
            {isUser && (
                <>
                    <p>После авторизации пользователя он направляется на главный экран, страницу со всеми событиями</p>
                    <p>На данной странице пользователь может просмотреть все события, отфильтровать по типу и статусу и отсортировать по времени.
                    Выбрав понравившееся ему событие, он может нажать на имя, и тогда его перенесёт на страницу с мероприятиями.</p>
                    <p>На данной странице пользователь может отфильтровать их по языкам и отсортировать по времени. Нажав на кнопку <span>"Подать заявку"</span>
                    пользователь отправляет заявку на мероприятие</p>
                    <p>При нажатии на гиперссылку <span>"Перейти в профиль"</span> пользователя перенаправляет на страницу профиля, где он может заполнить: ФИО, дату рождения, пол, 
                    языки, которыми он владеет, и более подробную информацию в поле "О себе". Также в профиле находится гиперссылка <span>"Мои заявки"</span>, нажав на которую
                    пользователь переходит на страницу, где он видит все свои заявки и их статусы</p>
                </>
            )}
            {isAdmin && (
                <>
                    <p>После авторизации администратор направляется на главный экран, страницу со всеми событиями.</p>
                    <p>На данной странице 
                    администратор может создавать, удалять, редактировать, сортировать по времени и фильтровать по типу и статусу события. Нажав на кнопку <span>"Добавить событие"</span>, администратор переходит на страницу, где после заполнения 
                    формы и нажатия на кнопку <span>"Добавить событие"</span> создается событие. 
                    Если администратору требуется отредактировать существующее событие, он может
                    нажать на кнопку <span>"Редактировать событие"</span>, тогда администратор отправится на страницу с редактированием, 
                    подобную странице с добавлением события, где после изменения полей и нажатия на кнопку <span>"Редактировать событие"</span> данные сохраняются, и его перенаправляет
                    на страницу с событиями. Также администратор может удалить событие, нажав на кнопку 
                    <span>"Удалить"</span>.</p>
                    <p>При нажатии на имя события, администратор перейдет на страницу с мероприятиями этого события,
                    где ему представляется точно такой же функционал, за исключением того, что фильтрация будет по языкам.</p>
                    <p>Нажав на гипер ссылку<span>"Нерассмотренные заявки"</span>, администратор отправляется на страницу, где отображаются 
                    заявки со всех мероприятий. Он может их принимать и отклонять.</p>
                </>
                )
            }
        </div> 
    )
}
export default AboutSystemPage;